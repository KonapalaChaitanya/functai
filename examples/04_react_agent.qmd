---
title: "FunctAI: ReAct Agent with Tools"
format:
  html:
    code-fold: true
---

This example shows using DSPy's ReAct agent with tools through `@magic`.

Prereqs:

- Install this repo (e.g., `uv pip install -e .`)
- Set your provider API key (e.g., `export OPENAI_API_KEY=...`)

```python
from functai import magic, final, format_prompt
import dspy

def see_surprise() -> str:
    return "it's a new golden magical tool!"

@magic(lm="gpt-4.1", module=dspy.ReAct, tools=[see_surprise])
def agent(question: str) -> str:
    answer: str = final("Answer the question")
    return answer

# Preview the prompt formatting for the agent call
print(format_prompt(agent, question="What is the surprise?")["render"])  

# Make a call and inspect the trajectory via DSPy in a separate session using inspect_history_text()
print(agent("What is the surprise?"))
```

Notes:

- ReAct constructs two subprograms: a `react` stage (tool selection) and an `extract` stage (final answer).
- `final()` maps to the final extracted answer. Intermediate `step()` markers are guidance for the extract stage.

